;;; ( SIMPLY SCHEME EXERCISE 5.16 ) Create a procedure that will give you a two 
;;; letter word from the first letter of two arguments, and for a sentence of two words.

(define (two-first wd1 wd2)
  (word (first wd1) (first wd2)))

;;; And for sentences below

(define (two-first-sent sent)
  (word (first (first sent)) (first (first (bf sent)))))
