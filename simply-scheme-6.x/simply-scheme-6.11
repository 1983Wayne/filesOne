;;; ( SIMPLY SCHEME EXERCISE 6.11 ) Create a predicate that will return whether your (day month year) is a valid entry or not.

(define (divisible? big small)
  (= (remainder big small) 0))

(define (valid-month? month)
  (if (and (> month 0) (< month 13))
      #t
      #f))

(define (valid-year? year)
  (if (not (equal? year 0))
      #t
      #f))

(define (leap-year-checker year)
  (if (or (and (divisible? year 4) (not (divisible? year 100)))
          (divisible? year 400))
      #t
      #f))

(define (valid-day? day month year)
  (cond ((and (= day 29) (= month 2)) (leap-year-checker year))
        ((and (< day 31) (> day 0) (not (= month 2))))
        ((and (= day 31) (member? month '(1 3 5 7 8 10 12))))
        (else #f)))
  
(define (valid-date? month day year)
  (cond ((and (valid-month? month) (valid-day? day month year) (valid-year? year)))
        (else #f)))
